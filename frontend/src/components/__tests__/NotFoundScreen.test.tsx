import { describe, it, expect, vi } from 'vitest'
import { screen } from '@testing-library/react'
import userEvent from '@testing-library/user-event'
import { NotFoundScreen } from '../NotFoundScreen'
import { renderWithProviders } from '../../test/utils'

describe('NotFoundScreen', () => {
	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–∫–æ–Ω–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', () => {
		renderWithProviders(<NotFoundScreen onAction={() => {}} />)
		expect(screen.getByText('‚ùå')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–∫–æ–Ω–∫—É', () => {
		renderWithProviders(
			<NotFoundScreen icon="üîç" onAction={() => {}} />,
		)
		expect(screen.getByText('üîç')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', () => {
		renderWithProviders(<NotFoundScreen onAction={() => {}} />)
		expect(screen.getByText('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫', () => {
		renderWithProviders(
			<NotFoundScreen title="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" onAction={() => {}} />,
		)
		expect(screen.getByText('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', () => {
		renderWithProviders(<NotFoundScreen onAction={() => {}} />)
		expect(
			screen.getByText(
				'–í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞',
			),
		).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', () => {
		renderWithProviders(
			<NotFoundScreen
				message="–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
				onAction={() => {}}
			/>,
		)
		expect(screen.getByText('–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', () => {
		renderWithProviders(<NotFoundScreen onAction={() => {}} />)
		expect(screen.getByText('–ù–∞–∑–∞–¥')).toBeInTheDocument()
	})

	it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏', () => {
		renderWithProviders(
			<NotFoundScreen
				onAction={() => {}}
				buttonText="–í–µ—Ä–Ω—É—Ç—å—Å—è"
			/>,
		)
		expect(screen.getByText('–í–µ—Ä–Ω—É—Ç—å—Å—è')).toBeInTheDocument()
	})

	it('–≤—ã–∑—ã–≤–∞–µ—Ç onAction –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', async () => {
		const handleAction = vi.fn()
		renderWithProviders(<NotFoundScreen onAction={handleAction} />)

		const button = screen.getByText('–ù–∞–∑–∞–¥')
		await userEvent.click(button)

		expect(handleAction).toHaveBeenCalledTimes(1)
	})
})

