import { useState, useMemo, useCallback, memo } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import {
  Button,
  Div,
  Separator,
  Text,
} from '@vkontakte/vkui';
import { LogoutConfirmModal } from './LogoutConfirmModal';
import { useAuth } from '../contexts/AuthContext';

interface SidebarProps {
  businessId: string;
  isOpen: boolean;
  onClose: () => void;
}

interface MenuItem {
  id: string;
  title: string;
  icon: string;
  path: string;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω—é –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const MENU_CONFIG: Omit<MenuItem, 'path'>[] = [
  { id: 'dashboard', title: '–î–∞—à–±–æ—Ä–¥', icon: 'üìä' },
  { id: 'calendar', title: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', icon: 'üìÖ' },
  { id: 'bookings', title: '–ó–∞–ø–∏—Å–∏', icon: 'üìã' },
  { id: 'services', title: '–£—Å–ª—É–≥–∏', icon: 'üíÖ' },
  { id: 'staff', title: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏', icon: 'üë•' },
  { id: 'clients', title: '–ö–ª–∏–µ–Ω—Ç—ã', icon: 'üë§' },
  { id: 'notifications', title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'üì¢' },
  { id: 'settings', title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' },
  { id: 'availability', title: '–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', icon: 'üìÖ' },
  { id: 'notification-templates', title: '–®–∞–±–ª–æ–Ω—ã', icon: 'üìù' },
];

export const Sidebar = memo<SidebarProps>(({ businessId, isOpen, onClose }) => {
  const location = useLocation();
  const navigate = useNavigate();
  const { logout } = useAuth();
  const [showLogoutModal, setShowLogoutModal] = useState(false);

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º menuItems —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞–ª–∏—Å—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  const menuItems = useMemo(() => 
    MENU_CONFIG.map(item => ({
      ...item,
      path: `/businesses/${businessId}/${item.id}`,
    })), [businessId]
  );

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const handleNavigation = useCallback((path: string) => {
    navigate(path);
    onClose();
  }, [navigate, onClose]);

  const isActive = useCallback((path: string) => {
    return location.pathname === path;
  }, [location.pathname]);

  const handleLogoutClick = useCallback(() => {
    setShowLogoutModal(true);
  }, []);

  const handleLogoutConfirm = useCallback(() => {
    logout();
    setShowLogoutModal(false);
  }, [logout]);

  const handleBackToBusinesses = useCallback(() => {
    navigate('/businesses');
    onClose();
  }, [navigate, onClose]);

  return (
    <>
      {/* Overlay –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
      {isOpen && (
        <div
          style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            backgroundColor: 'rgba(0,0,0,0.5)',
            zIndex: 400,
            display: 'block',
          }}
          onClick={onClose}
        />
      )}

      {/* –°–∞–π–¥–±–∞—Ä */}
      <div
        style={{
          position: 'fixed',
          top: 0,
          left: isOpen ? 0 : '-280px',
          width: '280px',
          height: '100vh',
          backgroundColor: 'var(--vkui--color_background)',
          borderRight: '1px solid var(--vkui--color_border)',
          zIndex: 500,
          transition: 'left 0.3s ease',
          overflowY: 'auto',
          boxShadow: isOpen ? '0 10px 25px rgba(0,0,0,0.1)' : 'none',
        }}
      >
        <Div>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div style={{
            padding: '20px 16px',
            borderBottom: '1px solid var(--vkui--color_border)',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            backgroundColor: 'var(--vkui--color_background)',
          }}>
            <Text style={{
              fontSize: '18px',
              fontWeight: 'bold',
              color: 'var(--vkui--color_text_primary)',
            }}>
              Mastro Admin
            </Text>
            <Button
              mode="secondary"
              size="s"
              onClick={onClose}
              style={{
                padding: 0,
                minWidth: '32px',
              }}
            >
              √ó
            </Button>
          </div>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
          <div style={{ padding: '16px 0' }}>
            {menuItems.map((item, index) => (
              <div key={item.id}>
                <Button
                  mode={isActive(item.path) ? 'secondary' : 'tertiary'}
                  size="m"
                  onClick={() => handleNavigation(item.path)}
                  style={{
                    margin: '4px 16px',
                    justifyContent: 'flex-start',
                  }}
                  before={
                    <span style={{
                      fontSize: '18px',
                      opacity: 0.8,
                    }}>
                      {item.icon}
                    </span>
                  }
                >
                  {item.title}
                </Button>
                {index < menuItems.length - 1 && (
                  <Separator style={{
                    margin: '8px 24px',
                    backgroundColor: 'var(--vkui--color_border)',
                  }} />
                )}
              </div>
            ))}
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div style={{
            padding: '16px',
            borderTop: '1px solid var(--vkui--color_border)',
            marginTop: 'auto',
            backgroundColor: 'var(--vkui--color_background)',
          }}>
            <Button
              mode="secondary"
              size="m"
              onClick={handleBackToBusinesses}
              style={{
                width: '100%',
                marginBottom: '8px',
              }}
              before={<span>‚Üê</span>}
            >
              –ö —Å–ø–∏—Å–∫—É –±–∏–∑–Ω–µ—Å–æ–≤
            </Button>
            <Button
              mode="outline"
              appearance="negative"
              size="m"
              onClick={handleLogoutClick}
              style={{
                width: '100%',
                color: 'var(--vkui--color_accent_red)',
                borderColor: 'var(--vkui--color_accent_red)',
              }}
              before={<span>üö™</span>}
            >
              –í—ã–π—Ç–∏
            </Button>
          </div>
        </Div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ */}
      <LogoutConfirmModal
        isOpen={showLogoutModal}
        onClose={() => setShowLogoutModal(false)}
        onConfirm={handleLogoutConfirm}
      />
    </>
  );
});
